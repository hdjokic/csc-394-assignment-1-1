{"version":3,"sources":["server.js"],"names":["express","require","app","bodyParser","port","process","env","PORT","set","use","json","urlencoded","extended","Pool","connectionParams","DATABASE_URL","connectionString","ssl","rejectUnauthorized","user","host","database","password","console","log","pool","get","req","res","query","err","version_results","rows","team_members_results","render","teamNumber","databaseVersion","version","teamMembers","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMG,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAEA;;AACAL,GAAG,CAACM,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CAEA;;AACAN,GAAG,CAACO,GAAJ,CAAQN,UAAU,CAACO,IAAX,EAAR,E,CAEA;;AACAR,GAAG,CAACO,GAAJ,CAAQN,UAAU,CAACQ,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAR,E,CAGA;;AACA,IAAMC,IAAI,GAAGZ,OAAO,CAAC,IAAD,CAAP,CAAcY,IAA3B;;AAEA,IAAIC,gBAAgB,GAAG,IAAvB;;AACA,IAAIT,OAAO,CAACC,GAAR,CAAYS,YAAZ,IAA4B,IAAhC,EAAqC;AACpCD,EAAAA,gBAAgB,GAAG;AAClBE,IAAAA,gBAAgB,EAAEX,OAAO,CAACC,GAAR,CAAYS,YADZ;AAElBE,IAAAA,GAAG,EAAE;AAACC,MAAAA,kBAAkB,EAAE;AAArB;AAFa,GAAnB;AAIA,CALD,MAKK;AAEJJ,EAAAA,gBAAgB,GAAG;AAClBK,IAAAA,IAAI,EAAE,UADY;AAElBC,IAAAA,IAAI,EAAE,WAFY;AAGlBC,IAAAA,QAAQ,EAAE,KAHQ;AAIlBC,IAAAA,QAAQ,EAAE,UAJQ;AAKlBlB,IAAAA,IAAI,EAAE;AALY,GAAnB;AAOA;;AACDmB,OAAO,CAACC,GAAR,CAAYV,gBAAZ;AACA,IAAMW,IAAI,GAAG,IAAIZ,IAAJ,CAASC,gBAAT,CAAb;AAIAZ,GAAG,CAACwB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BL,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaG,GAAG,CAACD,GAAJ,CAAQ,QAAR,CAAzB;AACAD,EAAAA,IAAI,CAACI,KAAL,CAAW,kBAAX,EAA+B,UAACC,GAAD,EAAMC,eAAN,EAA0B;AACzDR,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ,EAAiBC,eAAe,CAACC,IAAjC;AACAP,IAAAA,IAAI,CAACI,KAAL,CAAW,4BAAX,EAAyC,UAACC,GAAD,EAAMG,oBAAN,EAA+B;AACxEV,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ,EAAiBG,oBAAjB;AACAL,MAAAA,GAAG,CAACM,MAAJ,CAAW,OAAX,EAAoB;AACpBC,QAAAA,UAAU,EAAE,CADQ;AAEpBC,QAAAA,eAAe,EAAEL,eAAe,CAACC,IAAhB,CAAqB,CAArB,EAAwBK,OAFrB;AAGpBC,QAAAA,WAAW,EAAEL,oBAAoB,CAACD;AAHd,OAApB;AAKAT,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBI,GAAG,CAACF,GAAJ,CAAQ,cAAR,CAA/B;AACC,KARD;AASC,GAXD;AAYA,CAdD;AAkBAa,MAAM,CAACC,OAAP,GAAiBtC,GAAjB","sourcesContent":["const express = require('express')\r\nconst app = express()\r\nconst bodyParser = require('body-parser');\r\nconst port = process.env.PORT || 5000\r\n\r\n//View Engine\r\napp.set(\"view engine\", \"pug\")\r\n\r\n//parse app\r\napp.use(bodyParser.json());\r\n\r\n//parse xww-app\r\napp.use(bodyParser.urlencoded({extended:true}));\r\n\r\n\r\n//Database\r\nconst Pool = require('pg').Pool\r\n\r\nvar connectionParams = null;\r\nif (process.env.DATABASE_URL != null){\r\n\tconnectionParams = {\r\n\t\tconnectionString: process.env.DATABASE_URL,\r\n\t\tssl: {rejectUnauthorized: false}\r\n\t}\r\n}else{\r\n\t\r\n\tconnectionParams = {\r\n\t\tuser: 'api_user',\r\n\t\thost: 'localhost',\r\n\t\tdatabase: 'api',\r\n\t\tpassword: 'password',\r\n\t\tport: 5432\r\n\t}\r\n}\r\nconsole.log(connectionParams)\r\nconst pool = new Pool(connectionParams)\r\n\t\r\n\t\r\n\r\napp.get('/', (req, res) => {\r\n console.log('Accept: ' + req.get('Accept'))\r\n pool.query('SELECT VERSION()', (err, version_results) => {\r\n console.log(err, version_results.rows)\r\n pool.query('SELECT * FROM team_members', (err, team_members_results) => {\r\n console.log(err, team_members_results)\r\n res.render('index', {\r\n teamNumber: 3,\r\n databaseVersion: version_results.rows[0].version,\r\n teamMembers: team_members_results.rows\r\n })\r\n console.log('Content-Type: ' + res.get('Content-Type'))\r\n })\r\n })\r\n})\r\n\r\n\r\n\r\nmodule.exports = app;"],"file":"server.dev.js"}