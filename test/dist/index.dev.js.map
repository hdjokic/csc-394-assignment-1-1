{"version":3,"sources":["index.js"],"names":["server","require","request","expect","describe","app","before","done","listen","err","it","get","res","put","post","send","end","after","close"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,MAAD,CAAP,CAAgBE,MAA/B;;AAEAC,QAAQ,CAAC,oBAAD,EAAuB,YAAU;AACrC,MAAIC,GAAJ;AACAC,EAAAA,MAAM,CAAC,UAASC,IAAT,EAAc;AACjBF,IAAAA,GAAG,GAAGL,MAAM,CAACQ,MAAP,CAAc,IAAd,EAAoB,UAAUC,GAAV,EAAc;AACpC,UAAGA,GAAH,EAAQ;AAAC,eAAOF,IAAI,CAACE,GAAD,CAAX;AAAkB;;AAC3BF,MAAAA,IAAI;AACP,KAHK,CAAN;AAIH,GALK,CAAN;AAOAG,EAAAA,EAAE,CAAC,sCAAD,EAAyC,UAASH,IAAT,EAAc;AACrDL,IAAAA,OAAO,CAACF,MAAD,CAAP,CACKW,GADL,CACS,GADT,EAEKR,MAFL,CAEY,cAFZ,EAE4B,MAF5B,EAGKA,MAHL,CAGY,GAHZ,EAGiB,UAASM,GAAT,EAAaG,GAAb,EAAiB;AAC1B,UAAGH,GAAH,EAAO;AAAC,eAAOF,IAAI,CAACE,GAAD,CAAX;AAAkB;;AAC1BF,MAAAA,IAAI;AACP,KANL;AAOH,GARC,CAAF;AASAG,EAAAA,EAAE,CAAC,sDAAD,EAAyD,UAASH,IAAT,EAAc;AACrEL,IAAAA,OAAO,CAACF,MAAD,CAAP,CACCa,GADD,CACK,GADL,EAECV,MAFD,CAEQ,GAFR,EAEa,UAASM,GAAT,EAAaG,GAAb,EAAiB;AAC1B,UAAGH,GAAH,EAAO;AAAC,eAAOF,IAAI,CAACE,GAAD,CAAX;AAAkB;;AAC1BF,MAAAA,IAAI;AACP,KALD;AAMH,GAPC,CAAF;AAQAG,EAAAA,EAAE,CAAC,yEAAD,EAA4E,UAASH,IAAT,EAAc;AACxFL,IAAAA,OAAO,CAACF,MAAD,CAAP,CACCc,IADD,CACM,GADN,EAECC,IAFD,CAEM;AACF,oBAAc,MADZ;AAEF,mBAAY;AAFV,KAFN,EAMCZ,MAND,CAMQ,GANR,EAOCA,MAPD,CAOQ,UAPR,EAOoB,GAPpB,EAQCa,GARD,CAQKT,IARL;AASH,GAVC,CAAF;AAWAG,EAAAA,EAAE,CAAC,yEAAD,EAA4E,UAASH,IAAT,EAAc;AACxFL,IAAAA,OAAO,CAACF,MAAD,CAAP,CACCc,IADD,CACM,GADN,EAECX,MAFD,CAEQ,GAFR,EAGCa,GAHD,CAGKT,IAHL;AAIH,GALC,CAAF;AAQAU,EAAAA,KAAK,CAAC,UAASV,IAAT,EAAc;AAChBF,IAAAA,GAAG,CAACa,KAAJ,CAAU,YAAU;AAChBX,MAAAA,IAAI;AACP,KAFD;AAGH,GAJI,CAAL;AAKH,CAlDO,CAAR","sourcesContent":["const server = require('../server');\r\nconst request = require('supertest');\r\nconst expect = require('chai').expect;\r\n\r\ndescribe('The express server', function(){\r\n    var app;\r\n    before(function(done){\r\n        app = server.listen(3000, function (err){\r\n            if(err) {return done(err);}\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should render html for the root path', function(done){\r\n        request(server)\r\n            .get('/')\r\n            .expect('Content-Type', /html/)\r\n            .expect(200, function(err,res){\r\n                if(err){return done(err);}\r\n                done();\r\n            });\r\n    });\r\n    it('should not respond to PUT requests for the root path', function(done){\r\n        request(server)\r\n        .put('/')\r\n        .expect(404, function(err,res){\r\n            if(err){return done(err);}\r\n            done();\r\n        });\r\n    });\r\n    it('should respond to valid POST request for the root path, with a redirect', function(done){\r\n        request(server)\r\n        .post('/')\r\n        .send({\r\n            \"first_name\": \"test\",\r\n            \"last_name\":\"test\"\r\n        })\r\n        .expect(302)\r\n        .expect('Location', '/')\r\n        .end(done);\r\n    });\r\n    it('should respond to invalid POST request for the root path, with an error', function(done){\r\n        request(server)\r\n        .post('/')\r\n        .expect(400)\r\n        .end(done);\r\n    });\r\n\r\n\r\n    after(function(done){\r\n        app.close(function(){\r\n            done();\r\n        });\r\n    })\r\n});"],"file":"index.dev.js"}